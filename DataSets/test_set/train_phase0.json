{"text": "fully integral products require changes to every component to effect change in any single functional element.", "label": 1}
{"text": "modular architecture allows the required changes that are typically associated with the product's function to be localized to the minimum possible number of components. ", "label": 1}
{"text": "Although consumption and wear is frequently accommodated through a modular design with replaceable parts another popular strategy is to dramatically lower the cost of the entire product, often through an integral architecture, such that the entire product can be discarded or recycled.", "label": 1}
{"text": "In each of these cases, changes to the product are most easily accomodated through modular architecture: upgrades, add-ons, adaptation, wear, consumption, and flexibility", "label": 1}
{"text": "Sanchez and Sudharashan [22] describe a development strategy they call real-time market research. Under this scheme, the firm introduces a product, gauges the market response, then develops and launches an incrementally-improved product extremely quickly. A modular architecture is essential to being able to quickly change the product in this way.", "label": 1}
{"text": "Modularity of the product allows the variety to be created at final assembly, the last stage of the production process.", "label": 1}
{"text": "Modularity allows for Variety to be created by combinations of building blocks", "label": 1}
{"text": "Process flexibility allows economical high-variety production of a product with an integral architecture.", "label": 1}
{"text": "The components for the modular design could be produced with flexible production equipment, eliminating the need for the inventories and tooling expense.", "label": 1}
{"text": "With a modular product architecture, product variety can be achieved with or without flexible component production equipment. ", "label": 1}
{"text": "A modular architecture increases the likelihood that a component will be commonly useful", "label": 1}
{"text": "Components of a product exhibiting an integral architecture would only be potentially useful in other products containing the exact combination of functional elements, or parts of functional elements, implemented by the component.", "label": 1}
{"text": "Under most circumstances, a standard componentis less expensive than a component designed and built for use in only one product.", "label": 1}
{"text": "Component standardization can decrease costs due to economies of scale, but may also lead increased costs due to excess component capability", "label": 1}
{"text": "Standard components, in general, exhibit higher performance (for a given cost) than unique designs.", "label": 1}
{"text": "standardization may act as an inertial force preventing firms from adopting a better component technology because of compatibility issues", "label": 1}
{"text": "The use of standard components can lower the complexity, cost, and lead time of product development.", "label": 1}
{"text": "Modular architectures allow for optimization of local performance characteristics", "label": 1}
{"text": "Global performance characteristics can only be optimized through an integral architecture", "label": 1}
{"text": "A modular architecture may allow the use of a standard component", "label": 1}
{"text": "The use of a standard component exploits the performance refinements the supplier of this component has been able to make over the entire history of the component's use", "label": 1}
{"text": "Modular architectures allow components to be designed, tested, and refined in a focused way without disruptions and distractions arising from the need to address either interface coupling or other functional elements", "label": 1}
{"text": "I illustrate the role [integral] architecture plays a role in global performance with the specific case of optimizing performance by minimizing the size and mass of a product; similar arguements can be made about other physical properties, such as natural frequency of vibration or electromagnetic radiation. ", "label": 1}
{"text": "Two design strategies are frequently employed to minimize mass or size: function sharing and geometric nesting", "label": 1}
{"text": "An unfortunate consequence of nesting is the coupling of interfaces between components, the other hallmark of an integral architecture.", "label": 1}
{"text": "Integral architectures are sometimes employed to achieve very low unit costs, such as are required for disposable products", "label": 1}
{"text": "Modular architecture prefers a \"heavy weight system architect as team leader\" during the system-level design phase", "label": 1}
{"text": "Integral architecture prefers a \"heavy weight system integrator as a team leader\" durring the system-level design phase", "label": 1}
{"text": "Modular architecture requires mapping functional elements to components during the system-level design phase", "label": 1}
{"text": "Modular architecture requires defined interface standards and protocols in system-level design phase.", "label": 1}
{"text": "Modular architecture allows division of effort to specialists during the system-level design phase.", "label": 1}
{"text": "Integral architecture prefers to assign the subsystems to multidisciplinary teams during the system-level design phase", "label": 1}
{"text": "Integral architecture requires constant interaction to evaluate performance and to manage implications of design changes during the detailed design phase", "label": 1}
{"text": "Modular architecture allows for design to be performed by \"supplier-like\" entities during the detailed design phase.", "label": 1}
{"text": "Modular architecture allows component testing to be done independently during the detailed design phase.", "label": 1}
{"text": "Modular architecture requires more more emphasis on the system-level design and planning phase", "label": 1}
{"text": "Integral architecture absorbs relatively less effort during system-level design, as the focus is on establishing clear targets for the performance of the overall system and on dividing the system into a relatively small number of integrated subsystems. ", "label": 1}
{"text": "modular architecture can allow detailed design of each component to proceed almost independently and in parallel", "label": 1}
{"text": "For integral architecture, component designers all form a 'core team' and interact continually", "label": 1}
{"text": "With Integral architecture - Testing of components cannot be completed in isolation; subsystems of components must be assembled and tested as a whole. ", "label": 1}
{"text": "For the modular product, product testing and refinement is a checking activity The tests are intended to detect unanticipated interactions among the components. These interactions are viewed as 'bugs' and their resolution is usually localized to changes to one or two components.", "label": 1}
{"text": "For the integral product, product testing and refinement is a tuning activity. If the product performance must be altered in some way, changes are likely to be required to many components", "label": 1}
{"text": "Highly modular designs allow firms to divide their development and production organizations into specialized groups with a narrow focus & may also extend to the supplier network of the firm.", "label": 1}
{"text": "[Modular architecture facilitates specialization within the firm and its suppliers] Such specialization may facilitate the development of deep expertise relative to a particular functional element and its associated component.", "label": 1}
{"text": "Modular architectures may require better systems engineering and planning skills, ", "label": 1}
{"text": "Integral architectures may require better coordination and integration skills. ", "label": 1}
{"text": "Modular architecture allows functional change to be made to a product in the field.", "label": 1}
{"text": "Integral architecture causes variety to not be feasible without flexible component production processes.", "label": 1}
{"text": "Products can be assembled in a combinatorial fashion from a relatively small set of component building blocks to create variety", "label": 1}
{"text": "Slot and bus modular architecture causes variety to be confined to the choices of components within a pre-defined overall product structure. One-to-one mapping of functional elements to components prevents function sharing-the simultaneous implementation of more than one functional element by a single component-potentially resulting in physical redundancy. Standardized interfaces (in Buss Modularity) may result in additional redundancy and physical \"overhead.\"", "label": 1}
{"text": "Modular-Sectional architecture allows variety in overall structure of the product possible", "label": 1}
{"text": "Modular architecture allows components to be standardized across a product line", "label": 1}
{"text": "Modular architecture allows firms to use standard components provided by suppliers.", "label": 1}
{"text": "Modular Architecture allows interfaces to adhere to an industry standard", "label": 1}
{"text": "Modular architectures may require additional mass and space to decouple interfaces", "label": 1}
{"text": "Modular Architecture, when mapped with one function to each component, prevents function sharing, potentially resulting in physical redundancy", "label": 1}
{"text": "A potential negative implication of a modular product architecture is the risk of creating organizational barriers to architectural innovation.", "label": 1}
{"text": "Modular Architecture requires the top-down creation of a global product architecture.", "label": 1}
{"text": "A modular architecture enables a bureaucratic approach to organizing and managing development. This approach, for relatively well understood technologies, allows the complexity of the product development process to be dramatically reduced", "label": 1}
{"text": "Modularization introduces a variety of products to different markets by reducing the internal variety of components and processes of a company", "label": 1}
{"text": "Different companies undertake modularization efforts for different reasons, ... have shown reductions in costs and development times and ... have shown the higher agility from modularity", "label": 1}
{"text": "... showed the effects of product modularity on service and maintainance", "label": 1}
{"text": "Modularity can reduce the time for new product development", "label": 1}
{"text": "We found an increase in initial time investment for the development of product families, leading to an increased initial time to market but also an increase of commonality and component reuse. This lowered development costs per unit and reduced component variety , leading to a smaller variety of production processes and subsequent lower costs.", "label": 1}
{"text": "Modularity can cause longer development times and greater efforts needed for the initial modular architecture or platform", "label": 1}
{"text": "communal use of components can reduce quantity of parts or code numbers , which facilitates parts administration, thereby lowering development and manufacturing times, and therefore costs", "label": 1}
{"text": "communal parts when extended to large assemblies decreased performance levels and potentially increased costs become possible for some variants. Each module must be sized to the largest in its partition, taking into consideration the range of performance targets needed and partitioned into several module sizes supplying each partition", "label": 1}
{"text": "a focus on commonality makes it possible to use modules in different product variants", "label": 1}
{"text": "less development costs, development times, testing costs, and certification costs are all positive effects of modularity", "label": 1}
{"text": "commonality also allows for reducing generational diversity by using modules across product family generations.", "label": 1}
{"text": "Modules with higher volume (as a result of reuse) increases the module maturity incrementally across generations (failure rates decrease as a result of periodic reworkings on these modules over time)", "label": 1}
{"text": "Highly decoupled modules allow simplified adaptations to: new applications, a simpler module upgrade, or the expansion into a product family", "label": 1}
{"text": "initial platform development requires time, which can be amortized by the shorter execution times for individual product variants by introducing a configure to order strategy", "label": 1}
{"text": "modularity requires some effort for the maintenance of the modular kit in checking compatibility throughout the product family when adapting and further developing modules.", "label": 1}
{"text": "decoupling individual modules and their connections via clearly defined interfaces results in further benefits of less design modifications when developing a new product variant", "label": 1}
{"text": "Modularity can allow for simpler development processes, since the amount of repeated tasks, such as documentation decreases.", "label": 1}
{"text": "Modularity: Development tasks can be better allocated to development teams with deep functional expertise, and the organizational structure can be adapted more easily to the activities", "label": 1}
{"text": "Modularity also enables outsourcing of development tasks to suppliers so that companies can concentrate on their own core competencies", "label": 1}
{"text": "Highly Decoupled modules supports Isolating modules- which allows separate testing of the individual modules, thereby reducing product-level iterative redesign loops and detecting design defects failure earlier.", "label": 1}
{"text": "... found a lower ability to innovate because of the static boundaries in the product architecture", "label": 1}
{"text": "Modularity can support enhanced freedom in development, because developers can concentrate exclusively on one module, which allows for a higher degree of innovation", "label": 1}
{"text": "rigid systems of design rules necessary for product family structure can inhibit the ability to innovate, but innovation within these rules may be faster", "label": 1}
{"text": "When considering procurement, numerous authors point to the reductions of inventories due to modularity ... allocated this reduction to the reuse of same components", "label": 1}
{"text": "When many functions are bundled into one monolithic module and used in higher volumes across many product variants, then each variant does not need all the module functionality. unnecessary high costs can be placed onto the module.", "label": 1}
{"text": "Commonality decreases the number of unique processes, thereby facilitating automation", "label": 1}
{"text": "One of the most important effects of modularity is the increase in production lot size", "label": 1}
{"text": "The proportional curve between the increase in modularity and the reduced number of parts led to a decrease in the test and set-up cost per unit", "label": 1}
{"text": "Increasing commonality can create a more balanced machine utilization in production", "label": 1}
{"text": "Modular production processes enable parallelization which reduces throughput time", "label": 1}
{"text": "Another indirect benefit [of modularity] is the reduction of product numbers ", "label": 1}
{"text": "Modularity supports Postponement as a possible strategy for a late variant formation in different business areas.", "label": 1}
{"text": "Introducing modularity results in better corporate risk distribution.", "label": 1}
{"text": "To provide a better communal usability of modules, for example, two approaches are possible: Either the interfaces must be standardized or the module has to be sized to meet the product variant with the highest requirements", "label": 1}
{"text": "Interface standardization and oversizing enable commonality", "label": 1}
{"text": "interface standardization and function binding enable combinability", "label": 1}
{"text": "Decoupling enables separability", "label": 1}
{"text": "Decoupling and Interface standarization increase initial investment time to develop- may increase or lower total development time.", "label": 1}
{"text": "Decouplings's ease of mapping organizations to tasks allows for outsourcing development tasks- may postively or negatively influnce development time", "label": 1}
{"text": "Decoupling & Interface standardization increases design freedom in modules, but decreases over entire system to effect product innovation", "label": 1}
{"text": "Decoupling increases adaptability, upgradability and ease of mapping organisation to tasks. It lowers developmental risk", "label": 1}
{"text": "Interface standardization increases commonality and lowers design freedom", "label": 1}
{"text": "Commonality increases reuse which lends itself to greater reliablility and varient derivation while decreasing component variety", "label": 1}
{"text": "Commonality encourages Oversizing which leads to inefficiency of volume, weight and features", "label": 1}
{"text": "Commonality increases predictability and facilitates maintaining a larger stock size which can benefit from economies of scale", "label": 1}
{"text": "Increasing commonality of modules increases component reuse and development costs per unit decreased", "label": 1}
{"text": "Decoupling modules increases module reuse and adaptability, which allows for easier derivation of new products, leading to lower development times", "label": 1}
{"text": "Modularity allows for decoupling development tasks which makes it possible to develop in parallel and to outsouce, leading to shorter development times resulting in an earlier start of production planning and a shorter time to market", "label": 1}
{"text": "Commonality and component reuse also raise reliability and the maturity of products", "label": 1}
{"text": "Commonality via the oversizing of modules may decrease the efficiency of the product", "label": 1}
{"text": "the modularity impact model shows possible outcomes when increasing commonality of modules. Possible outcomes may be reduced amount of code numbers and component variety, making it possible to reduce the variety of differentiating stock items for parts and spare parts and with it stock and purchasing costs.", "label": 1}
{"text": "Increasing commonality allows for greater lot sizes, reduces set-up times and queuing delays, and also saves on inventory costs.", "label": 1}
{"text": "Decreasing component variety in combination with standard interfaces and function binding leads to a reduced variety of production processes with fewer investments in tools and jigs, which lowers both inventory costs and production costs per unit", "label": 1}
{"text": "Oversizing to increase commonality of modules may cause needless production steps, which in turn may increase production costs per unit.", "label": 1}
{"text": "For example, the oversizing tradeoff is typically applied on low volume products in which the increase of material costs is outweighed by the reductions in production inventory, tooling, and downtime.", "label": 1}
{"text": "Decoupling Decreases Development Risk", "label": 1}
{"text": "Modularity Increases Initial Time Investment (67%) and Development Time (78%)", "label": 1}
{"text": "Decoupling increases ease of mapping organisation to tasks, parallel development, start of production planning, outsourcing of development tasks, product adaptation, adaptability upgradeability, development time, and ease of variant derivation", "label": 1}
{"text": "Interface Standardization decreases freedom of design (67%), Product Innovation (44%), and decreases Innovation (economic impact) (44%)", "label": 1}
{"text": "Interface Standardization increases Imnovation (56%)", "label": 1}
{"text": "Commonality decreases component variety (100%), Failure rate (67%), code numbers (67%), parts administration (67%), development costs per unit (100%), and parts administration time (44%)", "label": 1}
{"text": "Commonality decreases component variety (100%), code numbers (67%), stock (44%), stock costs (56%), no. of parts and spare parts (56%), spare parts costs (??), no. of suppliers (67%), no. of purchase orders (56%), and procurement costs (67%)", "label": 1}
{"text": "Commonality increases lot size (78%), predictability (67%), purchasing conditions (56%), ease of supplier management (56%), dependency on supplier (67%)", "label": 1}
{"text": "Decoupling increases parallel production processes and manufacturing flexibility", "label": 1}
{"text": "Combinability increases postponement and manufacturing flexibility", "label": 1}
{"text": "Commonality increases postponement and manufacturing flexibilty", "label": 1}
{"text": "Commonality decreases component variety (100%), Set up changes (57%), Set up time queing delays (57%, inventory costs (71%), variety of production processes (57%), tool/jig investments (57%), inventory costs (71%)", "label": 1}
{"text": "Oversizing increases no. of needless production steps", "label": 1}
{"text": "Interface Standardization decreases variety of production processes (57%), Tool/jig investments (57%), and inventory costs (71%)", "label": 1}
{"text": "Function binding decreases variety of production processes (57%), tool / jig investments (57%) and inventory costs (71%)", "label": 1}
{"text": "If one uses off-the-shelf parts ... it is likely that the hours observed in the project (assuming no change in the content of the product) will be less than if one were to engineer a new part in-house. This conclusion has to be tempered with the realization that coordination costs may limit the savings from using old parts or farming work out.", "label": 1}
{"text": "Unique parts add activities and cost and may affect time.", "label": 1}
{"text": "Unique parts allow suppliers to provide engineering work, reducing internal engineering effort", "label": 1}
{"text": "The engineers in the American projects thus spend time making a larger set of common parts fit into a new design. To the extent that common and carryover parts pose constraints for product design and engineering, the greater use of unique parts in the japanese projects suggests a possible advantage in product performance.", "label": 1}
{"text": "Suppliers are involved earlier in the process, and, for sophisticated components, play a critical role in innovation. This pattern of involvement, and the existence of longer term relationships in Europe, is consistent with the fact that many of the major innovations in the European auto industry have come from suppliers-e.g. ABS, traction control, turbo-charging, to name a few.\n", "label": 1}
{"text": "In-house unique parts require more engineering effort (comparing US to Japanese Automakers)", "label": 1}
{"text": "High unique parts in a project correlates with high supplier involvement", "label": 1}
{"text": "High reliance on common parts correlates with low supplier involvement", "label": 1}
{"text": "More complex systems require more hours", "label": 1}
{"text": "[Unique parts strategies with modularity which allow for] \"black-box\" design format with suppliers considered more effecient when supplier relationships are good and intensive involvement", "label": 1}
{"text": "the combination of a high fraction of unique parts and significant engineering work done in-house creates a complex planning process that re-quires more time to complete.", "label": 1}
{"text": "use of more unique parts in designs generally improves the performance of the product. (possible tradeoffs with commonality, design quality, role of suppliers)", "label": 1}
{"text": "If each structural element implements several functions, it makes a device much more efficient", "label": 1}
{"text": "If automobiles were designed without function sharing they would be relatively large, heavy, expensive and unreliable.", "label": 1}
{"text": "mass-produced designs that exhibit function sharing are better than those that do not exhibit function sharing, as a general rule.", "label": 1}
{"text": "designs exhibiting function sharing will generally be less expensive to produce than designs that do not exhibit function sharing, as a result of fewer parts, easier assembly and less required adjustment and maintenance.", "label": 1}
{"text": "designs that share function generally perform better than those that do not, resulting from decreased size and weight.", "label": 1}
{"text": "function sharing is generally a poor design strategy for research devices and prototypes where debugging, adjustment and diagnosis are very important, because function sharing often causes device perform- ance parameters to be coupled in complicated ways to device physical parameters", "label": 1}
{"text": "Modular designs make new problems easier to think about by decomposing them into seperate modules/components.", "label": 1}
{"text": " Functionsharing is part of the perception of novelty, simplicity orinterest in a development", "label": 1}
{"text": "Function sharing in a design is harder to acheive when a function's physical features are widely distributed over a part.", "label": 1}
{"text": "Function Sharing results in a design simplification procedure that allows the designer to think a modular, decomposed fashion, leading to subsequent design processing to make it more efficient", "label": 1}
{"text": "[Function sharing] with the unbiased application of the physical-feature-based design operations will yield some novel designs", "label": 1}
{"text": "(OTS Parts) competition among suppliers should offer potential benefits for outsourcing both physical production activities and the information processing activities associated with product design. Conversely, a lack of competition among many suppliers (i.e., supplier concentration) creates an incentive for the manufacturer to internalize an activity in order to avoid the exercise of monopoly power by a supplier.", "label": 1}
{"text": "(OTS Parts) When a supplier provides goods or services to many customers, this supplier may achieve greater economies of scale than could a customer providing the same goods or services for itself. Achieving this benefit requires that the goods or services be standardized and that there be fewer suppliers than customers. External economies of scale are familiar in component production, yet may also be present in product design. For example, when designers can employ expensive and specialized automation tools, may be scale advantages to procuring these design services from a supplier who specializes in these activities.", "label": 1}
{"text": "(OTS Parts) for a given required lead-time, the capacity required for a shared resource can be substantially less than the sum of the capacities required to service multiple sources of demand independently. These economies apply to both design and production activities. Design activities tend to experience substantial variability in demand, because the timing of episodes of product development is often more \u201clumpy\u201d than are the production schedules of the associated products.", "label": 1}
{"text": "(Unique Parts) A firm pursuing a new market opportunity or employing a new product or process technology may need access to a new capability immediately.", "label": 1}
{"text": "(OTS Parts) Many such capabilities require time to procure internally and so, in the short term, a manufacturer must outsource an activity to a competent supplier.", "label": 1}
{"text": "(Unique Parts) the acquisition of a new-to-the-firm capability which generally requires a financial investment of human or physical capital.", "label": 1}
{"text": "(OTS Parts) One way to avoid the investment is to outsource design and/or production to afirm that already possesses the required capabilities", "label": 1}
{"text": "(Unique Parts) Asset Specificity and Potential for \u201cHoldUp.\u201d ... costs can be very high in the presence of specific assets, those assets that a supplier requires to provide a good or service and that are unique to the needs of a single customer ... In the presence of such assets, both supplier and customer face small-numbers bargaining and the associated threat of opportunistic behavior on the part of the other party.", "label": 1}
{"text": "(Unique Parts) A central idea in the field of competitive strategy is that a firm is a locus of competitively distinctive capabilities. Because these capabilities can be quite \u201csticky\u201d (i.e.,difficulttotransfer), a firm can develop a competitive advantage by investing in their development", "label": 1}
{"text": "(Unique Parts) There are also appropriability issues associated with design and production activities. When outsourcing an activity, there is a risk that intellectual property may spill over to competitive firms (Teece1986). Similarly, outsourcing an activity to a supplier presents a risk that this supplier may develop into a competitor. These risks may motivate a firm to internalize activities critical to its competitive advantage.", "label": 1}
{"text": "(Unique Parts) Outsourcing generally requires that a contract can be written that anticipates likely contingencies. Creating a robust contract will be difficult in situations where there is a high likelihood of an unpredictable exogenous disturbance in the task requirements, perhaps due to an unexpected change in market requirements. When unanticipated disturbances occur, contract renegotiation is likely, with the associated small-numbers bargaining problems. As a result, the firm is likely to wish to internalize the activities subject to such disturbances", "label": 1}
{"text": "firms that do not have the minimum efficient scale in any one material to benefit from outsourcing production of at least the frames made from that material.", "label": 1}
{"text": "(Unique Parts) knowledge and skill related to a proprietary product design are highly specific assets. Allowing a supplier to harbor these assets presents high risks of hold-up and opportunistic behavior.", "label": 1}
{"text": "When a material and its associated fabrication process are new, designers must collaborate closely with those operating the production process to arrive at a design that both functions as desired and can be feasibly and economically produced. Therefore, we would predict that frames employing new materials would benefit from being both designed and produced by the same organizational entity.", "label": 1}
{"text": "a high degree of modularity allows breaking down problems into simpler subproblems", "label": 1}
{"text": "Many important advances in robotics research were achieved by overcoming existing \u201cmodularizations\u201d and the corresponding boundaries between sub-fields of robotics.", "label": 1}
{"text": "This simple end-effector can reliably pick all but one of the challenge objects (the pencil cup) from the narrow, deep shelf bins. Grasping success is rather insensitive to the exact contact location with the object", "label": 1}
{"text": "failures result from the fact that the reaching movement is executed open-loop, accumulating a significant error in forward kinematics of the arm, resulting in a pose error of up to 1cm. This can be addressed easily by shifting ... towards more feedback", "label": 1}
{"text": "In five out of ten attempts, the robot toppled over the glue bottle. The bottle then required a reattempt from the top. In two cases the robot did not have enough time for a reattempt and lost points. As before, this failure case can be alleviated by additional feedback; the robot could detect the tumble and immediately change the strategy. Alternatively, a planner could reason about the tipping point of objects to pick a more stable approach direction for the pick.\n", "label": 1}
{"text": "Modules with defined interfaces allow to use, replace, compare, and recombine existing modules to solve a new problem.", "label": 1}
{"text": "Building systems of arbitrary complexity without structuring them into modules is very difficult", "label": 1}
{"text": "A clearly partitioned modular system has an impact on the social organization of a project, too: developers can focus on their module, avoiding time-consuming communication with developers of other modules.", "label": 1}
{"text": "To ensure that the performance of the entire system is maximized, and to avoid making wrong commitments or addressing sub-problems that are unnecessarily difficult, all components of the system should be chosen to maximally exploit potential synergies between components. Identifying these synergies requires early integration", "label": 1}
{"text": "Tight integration with Components requires overlapping knowledge from all team members", "label": 1}
{"text": "Team PFN participated in the APC2016 with a highly modular system. They relied on accurate industrial manipulators, powerful image segmentation and grasp detection based on deep neural networks to divide the problem according to the classical sense-plan-act paradigm, with good results.", "label": 1}
{"text": "teams participating in the second edition were able to build upon the modularizations that have proven successful and focus on improving the modules.", "label": 1}
{"text": "focusing on computation allows building highly complex systems with diverse behaviors in a short amount of time.", "label": 1}
{"text": "Purely computational approaches to robotics (Coleman2015; LaValle2006;Miller and Allen2004) also have the advantage of potentially being hardware-agnostic.", "label": 1}
{"text": "Tailoring the hardware to a particular problem can reduce the required computation. Hardware solutions are often simple and robust, especially when uncertainty plays a dominant role.", "label": 1}
{"text": "These hands exploit passive compliance to robustly grasp a variety of objects. Although this comes at the cost of reduced controllability, compliance removes the computational requirements of grasping while increasing grasp performance.", "label": 1}
{"text": "we reduced the need for computation by increasing the number of degrees of freedom by mounting the robot arm on a mobile base. This allowed us to generate motion mostly through feedback control, rather than resorting to motion planning.", "label": 1}
{"text": "the missing passive compliance of that system meant that collisions were more dangerous and had to be avoided which required more complex computation", "label": 1}
{"text": "There is a fundamental trade-off between complex reasoning and quick reactions. Given unlimited computational resources, a robot could plan over the state of all objects in the world, including models for dynamics and uncertainty. However in reality this is not feasible; the robot must abstract away some of this complexity to reason efficiently", "label": 1}
{"text": "Planning finds global solutions, often with theoretical guarantees, where controllers based on local feed back would fail.", "label": 1}
{"text": "Manipulation tasks, in particular, can be greatly simplified by exploiting feedback from contact with the environment", "label": 1}
{"text": "Architecture developed with KBE tools have reduced the design time in domains such as aerospace; however due to their complexity, the effort required to configure a tool for a specific application is significant, and thus their use is restricted to largely repeatable design problems.", "label": 1}
{"text": "[Use of Carry over] synthesis may be restricted to adding and removing connections, while in design with no architecture carry over there are no existing components or connections to remove [forcing new ones to be generated]", "label": 1}
{"text": "A greater number of interfaces between components requires more redesign work", "label": 1}
{"text": "Conserving architecture elements from previous designs [of a different category] can minimise risk and cost", "label": 1}
{"text": "While constructing the complete schema and architecture models, it became clear that the incorporation of the cyclone could be decoupled from many other parts of the architecture such as the wheels or the mains cable storage... In order to focus the computational synthesis on solving the problem at hand, therefore, the architecture of the SC-N200 vacuum cleaner was simplified by removing or collapsing all elements which were peripheral to the problem", "label": 1}
{"text": "Increasing the complexity of the schema and the size of the design problem increases the likelihood that erroneous assumptions will have been included", "label": 1}
{"text": "The computational cost of the method remains an issue for large problems. Characterizing the scaling of the method is not straigntforward, since each problem modelled has a typical size of the architectures that might solve it, and different problems can have significantly different properties.", "label": 1}
{"text": " By adopting modular design strategies, firms can take reponsibility for the desing and development of separate modules. Thus, they can develop new products at a faster pace", "label": 1}
{"text": " Modularity, by simplifying design and development processes, would allow a greater division of labour across firms.", "label": 1}
{"text": "modularity allows firms to focus their capabilites on a few modules .", "label": 1}
{"text": "The finer the detail with which modules\u2019 interfaces are defined, the faster the pace of experimentation. ", "label": 1}
{"text": "Modularity defines the organization of a problem into a divison of tasks which you can allot to decoupled teams", "label": 1}
{"text": "Modular designs generate more options, which generates more value", "label": 1}
{"text": "Modular product design means that a particular decomposition of the design problem has been already decided upon", "label": 1}
{"text": "independent teams can work independently on the various sub-problems without explicit coordination", "label": 1}
{"text": "slower' (i.e. less modular) search strategies catch up and reach better solutions as they can explore broader search spaces, exactly because they rely on less tightly defined 'design rules'", "label": 1}
{"text": "Modularity allows the decoupling of complex artefacts into less-complex, self-contained modules; each module, at the extreme, could become the sole business of specialist firms", "label": 1}
{"text": "Modularity makes complexity manageable by making possible to run experiments at the level of modules, rather than the entire artefact, and in parallel", "label": 1}
{"text": "modularity is \u2018tolerant of uncertainty\u2018 because particular elements of a modular design may be changed after unforeseen contingencies emerge, as long as the design rules are obeyed", "label": 1}
{"text": "The embedded modularity of the three-shaft design enabled Rolls-Royce to exploit the same architecture, hence cutting the high developement costs of new engines, to cater for a broader range of power requirements", "label": 1}
{"text": "In fact, they were able to introduce incremental changes in the original architecture by (mixing and matching components) to meet a wider variety of aircraft makers' needs than their competitors. ", "label": 1}
{"text": "The adoption of modular design strategies brings about costs too. First, the creation and dissemination of design rules is a rather expensive activity", "label": 1}
{"text": "Experimenting and testing on different modules is also costly", "label": 1}
{"text": "Developing modular architectures is more difficult than developing integral architecture as it requires a very precise understanding of product functionalities, how they are allocated to components, and how the components interact.", "label": 1}
{"text": "the choice of product architecture should be related to a company\u2018s product strategy", "label": 1}
{"text": "If a company wants to stress product performances, then the most appropriate choice would be the intergral architecture, since global performance characteristics are optimized through this type of architecture", "label": 1}
{"text": "companies wanting to emphasize product change and variety, flexibility and upgradeability, may well choose a modular architecture", "label": 1}
{"text": "Modularity will make the system climb the local optimum faster, but cannot make it jump to another, higher valued, local optimum (inherent lock-in problem)", "label": 1}
{"text": "Relying on the modular architecture of the established product, Fujitsu, like other firms, relied on a decoupled network of external suppliers. However, unlike its compe- titors, Fujitsu continued to invest \u2018in systems knowledge and materials and component technology in its R&D labs\u2019 ... It enabled the firm to master the new, fast-moving technology and to navigate the dangerous waters of architectural innovation stemming from it. By knowing more than it needed for its own design and production, Fujitsu managed to avoid competency traps such as those described by Chesbrough and Kusunoki (2001) and Henderson and Clark (1990). Brusoni et al. (2001) argued that cases like Fujitsu\u2019s show that decoupled, modular networks coordinated through markets and the exchange of codified knowledge (Sturgeon, 2002) are but particular cases of a more general model, which link firms\u2019 knowledge and production boundaries. ", "label": 1}
{"text": "products characterized by unpredictable interdependencies across components as well as imbalances at the technological level- require tightly organized firms", "label": 1}
{"text": "Truly modular networks *can* emerge only when product interdependencies are predictable and when the specialized bodies of knowledge are at the same stage of development", "label": 1}
{"text": "We show that the speed of adaptation can give evolutionary advantages even though overmodular search strategies may not be the most efficient problem-solving strategy.", "label": 1}
{"text": "modular problem solving strategies instead prevent organizations from rapidly abandoning their established way of doing things", "label": 1}
{"text": "*Provided statistics* shows that sharp reducitons of complxity and time of search can be obtained by accepting sub-optimal 'satisficing' solutions", "label": 1}
{"text": "Fully modular search  strategies, (those in which each component is optimized independently of the others) are not optimal as they can locate the globally optimal configuration only if there are no interdependencies among components.", "label": 1}
{"text": "An over-modular approach focussed on the exploration of each component independently from the others, may be doomed to be limited in the maximum performance that can be finally obtained", "label": 1}
{"text": "Aiming at the optimal solution of a problem(integral search strategy) entails the necessity to take into account all the interdependencies among components. However, this enlarges enormously the space to be searched and therefore the time required to explore it", "label": 1}
{"text": "In highly volatile environments, it can happen that an agent finds itself in a location with very low fitness ...in this case local short steps(modular search strategies) will be too slow a strategy... while long jumps(integral search strategies) have a high probability of quickly finding a higher fitness level", "label": 1}
{"text": "The integrated strategy is likely to provide large improvements when starting from low-fitness locations, while it will provide low improvements when the starting location has high fitness", "label": 1}
{"text": "In highly volatile, fast-changing  environments  in fact, modular search strategies are shown to have a high probability of being trapped  into low-fitness  zones ", "label": 1}
{"text": "Integral search strategies on the contrary perform search on a broader spectrum and can therefore jump out of low-fitness zones of the landscapes in which sooner or later everybody will fall in a highly volatile environment.", "label": 1}
{"text": "Designing product specific components allows firms to maximize product performance with respect to holistic customer requirements--those requirements that arise in a complex way from  most of the components of a product", "label": 1}
{"text": "There are many benefits to selecting an existing component, including minimizing investment, exploiting economies of scale, and preserving organizational focus", "label": 1}
{"text": "Several other motives for selecting existing components may also be present in particular situations, including: a desire for component compatibility because of network externalities", "label": 1}
{"text": "... [when a] function is quite complex and can only be partially be made explicit ... only by using coupled parameters and highly nonlinear mathematical relationships. As a result it is not possible to decompose [the function] into independant performance requirements for each of the components. ... as a result, most of the components ... must be product specific", "label": 1}
{"text": "if weight were the only important requirement for ... high performance components could be selected [rather than custom built]", "label": 1}
{"text": "To minimize size, mass, and variable cost, designers seek to minimize excess component capability, and therefore design product-specific components", "label": 1}
{"text": " to minimize size, mass, and variable cost, designers adopt integral product architectures, and therefore design product-specific components", "label": 1}
{"text": "Modular architecture prevents function sharing", "label": 1}
{"text": "As function sharing increases, component requirements become more idiosyncratic and less likely to be fulfilled by existing components", "label": 1}
{"text": "Part integration, or the combination of multiple parts into one contiguous part, minimizes the use of material and space associated with component interfaces, and may improve geometric precision", "label": 1}
{"text": "As a result, a strong component supply  base may not develop, requiring product firms to design their own components. While a firm may still standardize components internally, components are likely to be less standardized than if there were a strong external supply of components.", "label": 1}
{"text": "These components [with function sharing] are likely require significant tuning to achieve the appropriate trade-offs for the customer", "label": 1}
{"text": "The modules identify opportunities for function sharing by components and lead to alternative layouts where concept generation techniques may be used to embody the layouts", "label": 1}
{"text": "Product modularity is a strategic approach to product development that can be used by complanies to increase the variety of products and to speed up the NPD process", "label": 1}
{"text": "product components can be standardized, shared and reused in a range of products so that new products could frequently and easily be launched by modifying and combining different modules from existing designs", "label": 1}
{"text": "since product modularity allows a product to be decomposed into a set of smaller de-coupled sub-systems or chunks, different teams of designers can autonomously and concurrently design and test modules, thus reducing the time dedicated to the detailed design of new products", "label": 1}
{"text": "Product modularity is positively related to strategic flexability, measured in terms of model variety and product introduction rate, which in turn influence firm financial performance", "label": 1}
{"text": "When interations among product chunks are well-developed and an agreement over the desing of common product interfaces has been reached, teams of designers from the manufacturer and suppliers can autonomously and concurrently design product modules", "label": 1}
{"text": "[Modularity] allows the firm to design, develop and produce parts which can be combined in the maximum number of ways to create a large variety of end products from a smaller set of the independent module alternatives. For this reason, modularity is often considered a useful approach to reduce costs by increasing component standardization, i.e. commonality across different product variants", "label": 1}
{"text": "Since product modularity allows product variety to be managed without the explosion of costs for inventory and production, literature often associates product modularity with imporvements in different competitive performances of a firm, such as product costs, quality, flexibility, manufacturing cycle time and customer service", "label": 1}
{"text": "Modular product architecture facilitates and speeds up product changes and updating over the life of a product", "label": 1}
{"text": "Modularity allows easy and rapid identification of the modules that should be changed for improving product performance or adding an additional product feature", "label": 1}
{"text": "Product modularity can change the way detailed designing and testing phases in NPD are managed and organized. In these phases, the overall design task can be divided into smaller tasks for parallel development ...different teams of designers ... can design modules autonomously and concurrently thus reducing the overall time dedicated to product designing and testing", "label": 1}
{"text": "Product modularization with close supplier collaboration reduces development lead time", "label": 1}
{"text": "The design of a modular product can be easily be divided between suppliers and the producer to facilitate the concurrent engineering of a new/modified product", "label": 1}
{"text": "The positive effect of modularity on time performance in NPD increases with rising levels of integration between functions in the NPD process", "label": 1}
{"text": "Cross functional Teams (II) working on modular architecutures will spend more time defining the architecture, but this time recuperated by reducing inefficiencies and product modifications", "label": 1}
{"text": "We found that in particular circumstances, Modularity has no impact on Time Performance. In particular, it emerges when Interfunctional Integration is low, Modularity seems to have no influence on Time Performance.", "label": 1}
{"text": "Companies characterized by low degrees of modularity perform better when interfuncitonal integration is low", "label": 1}
{"text": "Modularity/Modularization... may, for example, ease engineering change management, allow product flexibility in use or even help designing product families.", "label": 1}
{"text": "Under Modularisation - These drivers are all connected to a root node representing the benefit \u2018reduction of internal variety and increase in commonality\u2019.", "label": 1}
{"text": "benefits of product modularity are the ability to reach high product variety for mass customisation while keeping a relatively low and manageable internal product variety for the product development process", "label": 1}
{"text": "Under Modularisation - Breaking down the product complexity is cited as a means to reduce the development time by allowing parallel development and, thus, to lead to a shorter time-to-market and reduced development costs.", "label": 1}
{"text": "Modularity is identified as an important aspect for product maintenance \u2013 notably because it allows separated diagnoses of product components and isolation of wear parts \u2013 which is, in turn, identified as an aspect of environment-friendly product design.", "label": 1}
{"text": "The possibility to upgrade, adapt or modify the product for extending the service life of a product or parts and, therefore, reduce the environmental load of products is another cited potential benefit of modularity.", "label": 1}
{"text": "Modularity is expected to lead to a reduction in production costs due to postponement and delayed differentiation.", "label": 1}
{"text": "Decreasing the interface complexity between product parts allows the distribution of design tasks, reduces the required intensity of communication between teams and,therefore, allows faster design changes.", "label": 1}
{"text": "Product modularity affects the ability to disassemble the product at its end-of-life; hence,the ability to sort parts according to their most appropriate post-life treatment (repair,reuse, remanufacturing, recycle and disposal) and the environmental load of products.", "label": 1}
{"text": "Modularity may limit the possibility of optimising the product through integration of parts (Gershenson, Prasad, and Zhang 2003; Lau 2011).", "label": 1}
{"text": "Although it supports product variety, it can also lead to a structural similarity in product families (Gershenson, Prasad, and Zhang 2003; Kong et al. 2009; Lau 2011).", "label": 1}
{"text": "In the same way, it may reduce the flexibility of the product family (Gershenson, Prasad,and Allamneni 1999).", "label": 1}
{"text": "It may ease competition per imitation (Gershenson, Prasad, and Zhang 2003; Seliger andZettl 2008; Lau 2011).", "label": 1}
{"text": "The lack of optimisation of modular architectures may hinder aesthetics (Pandremenos,Vasiliadis, and Chryssolouris 2012).", "label": 1}
{"text": "Modularisation may contradict the design for manufacturing and assembly because it may lead to an increased number of parts and, therefore, increase the number of assembly errors (AlGeddawy and ElMaraghy 2013).", "label": 1}
{"text": "Designing and developing product families has been well recognized as an effective means to achieve the economy of scale in order to accommodate an increasing product variety across diverse market niches (Meyer & Utterback, 1993; Sundgren, 1999).", "label": 1}
{"text": "product family design can offer a multitude of benefits including reduction in development risks and system complexity, improved ability to upgrade products, and enhanced flexibility and responsiveness of manufacturing processes (Sawhney, 1998).", "label": 1}
{"text": "Corresponding to a product platform, production processes can be organized as a process platform in the form of standard routings, thus facilitating production configuration for diverse product family design solutions (Jiao, Tseng, Ma, & Zou, 2000).", "label": 1}
{"text": "integral architectures are often driven by product performance or cost, while modular architectures are driven by variety, product change, engineering standards, and service requirements.", "label": 1}
{"text": "product family architecture involves systematic planning of modularity and commonality in terms of building blocks and their configuration structures across the functional, technical and structural views. Zamirowski and Otto (1999) point out the necessity to develop the product architecture and platform by synchronizing multiple views such as those from customer needs, functional structures and physical architectures.", "label": 1}
{"text": "Most approaches consider only a single product platform, where each platform variable is shared across the entire product family. This strategy ... may lead to a situation that some low-end products may be over-designed and certain high-end products may be under-designed (Dai & Scott, 2004).", "label": 1}
{"text": "Ulrich (1995) points out that the modular product architecture allows each functional element of the product to be changed independently by changing only the corresponding component. This is advantageous to produce custom-built products from standard models. It also makes standardization possible, which is essential to achieve the economy of scale; therefore, using modular product architectures, variety can be created by configuring existing building blocks.", "label": 1}
{"text": "The importance of standardized interfaces in product architectures is recognized by Meyer and Lehnerd (1997). Sanderson and Uzumeri (1995) suggest that the product family evolution may have been restricted if clear and robust physical interfaces are not developed and defined carefully.", "label": 1}
{"text": "Allahverdi et al.(2002) optimize modular products as a generalized subset selection problem subject to a balance of the quality loss due to modularization and the cost of reconfiguration.", "label": 1}
{"text": "Kim and Chhajed (2001) develop an economic model that considers a market consisting of a high segment and a low segment. They determine that large commonality decreases production costs but makes the products more indistinguishable from one another, which makes the product more desirable for the low segment but less desirable for the high segment.", "label": 1}
{"text": "The direct consequence of product customization on production is observed as an exponentially increased number of process variations (referred to as process variety), such as diverse machines, tools, fixtures, setups, cycle times, and labor (Wortmann et al., 1997).", "label": 1}
{"text": "The benefit of designing product families comes from a reduction of components in inventory and component handling, reduction of component types and manufacturing processes, and increased production volumes (Fisher et al., 1999).", "label": 1}
{"text": "sharing components in a product family may lead to a lack of distinctiveness, and shared components in one product often exceed the requirements of other products, which causes additional production costs (Krishnan & Gupta, 2001).", "label": 1}
{"text": "This also suggests that the use of common components allows inventory levels to be lowered through risk pooling (Gerchak, Magazine, and Gamble, 1988).", "label": 1}
{"text": "From a supply chain perspective, risk pooling is one of the most noticeable effects of product platforms and component commonality across product families.", "label": 1}
{"text": "reducing complexity of a product family through product design by leveraging common characteristics among the products within the family.", "label": 1}
{"text": "Fine et al.(2005) conjecture that integral products would ideally be built by integral supply chains, whilst modular products tend to be produced by modular supply chains. Based on examination of the automotive industry", "label": 1}
{"text": "Developing product platforms in most cases requires more investments and development time than developing a single product, which may delay the time to market and affect the return on investment time.", "label": 1}
{"text": "Product family design and development enhances profitability through a synergy of increased customer-perceived value and cost reduction in design, manufacturing and the supply chain.", "label": 1}
{"text": "It is diffcult to maintain commonality and economies of scale in products with strict customer design requirements that may vary greatly from contract-to-contract or piece-to-piece. Often, these products are highly customized or possibly unique, which leads to high development and production costs and long and uncertain production times. ", "label": 1}
{"text": "Product families have been successfully employed... to address the challenge of providing customization and variety for the marketplace while maintaining commonality between products", "label": 1}
{"text": "Bottom up approach wherein a company redesigns or consolidates a group of distinct products to standardize components to improve economies of scale.", "label": 1}
{"text": "When designing a valve to meet custom requirements, it is typical for a company to simply modify a previously built design. This process can be time consuming and expensive because the capability of the previous design to handle the new requirements is not precisely known, and a complete review is necessary to determine required modifications and cost. Moreover, product line consistency and control can be lost in the process.", "label": 1}
{"text": "Carefully designed product platform can help reduce the design and review effort and shorten product lead-time.", "label": 1}
{"text": "When applying a bottom up approach to product family design, a market segmentation grid is established from the existing product line, and the grid should reflect the company's overall target market. The market is typically well known, and the market segmentation grid should contain the product types, grades, sizes, or other designations that are typically already established. If the target market or product is not yet established, a top-down design approach to platform design, rather than redesign, should be considered.", "label": 1}
{"text": "For highly customized products, it can be difficult to establish the market niches and the design requirements with certainty, as future demand and requirements can be markedly different from the past.", "label": 1}
{"text": "We identify subsets of the company's product line where *platform* leveraging can potentially provide the largest cost savings. We begin with the premise that platform leveraging can have the greatest impact where past customer demand was highest, and proceed by defining a subset of the complete market segmentation grid where leveraging has the greatest cost savings potential.", "label": 1}
{"text": "*Platform* leveraging strategy is a good compromise between cost savings and performance based on past engineering experience. If the leveraging is too aggressive, performance inefficiencies could dominate, resulting in decreased customer satisfaction.", "label": 1}
{"text": "Modular *Widget* designs, based on these *Product* platforms, could more effectively reduce *Widget* construction and minimize the number of existing *Widgets* that must be stored.", "label": 1}
{"text": "a \"hypothetically perfect'' integrative system would be one whose components are completely physically distributed throughout the product resulting in components that share interfaces with all the systems that comprise the product", "label": 1}
{"text": "a \"hypothetically perfect'' modular system would be one whose components do not share design interfaces with components that belong to other systems.", "label": 1}
{"text": "The distributed nature of the integrative systems forces these design teams to overcome organizational barriers in order to handle design interfaces with all the systems.", "label": 1}
{"text": "design interfaces across modular systems are more difficult for design experts to recognize than interfaces with integrative systems.", "label": 1}
{"text": "spatial-type design interfaces are largely addressed in the design of modular systems while transfer-type design interfaces are more likely to be handled in the design of integrative systems.", "label": 1}
{"text": "Given a family of modular products, designing low cost assembly systems is an important problem. The ability to produce a variety of products through the combination of modular components is a meaningful benefit during product design stage. Therefore, modularity design is to produce different products by combining standard components and sharing the same assembly operations for a part of their structure.", "label": 1}
{"text": "Suh (1990) promotes the decoupling of functional requirements in design. The independence of functional requirements allows design parameters to have a controllable effect on a specific functional requirement and minimal negative impact on other functional requirements. ", "label": 1}
{"text": "Tsai and Wang (1999) presented a methodology of modular-based design in the conceptual stage of systems to support concur-rent engineering.", "label": 1}
{"text": " All parts should be assembled from one direction whenever possible. Extra directions mean wasted time and motion as well as more transfer stations, inspection station and fixture nests. The best possible assembly is when all parts are added in a top-down fashion to create a Z-axis stack.", "label": 1}
{"text": "The following is a list of DFA criteria (Corbett, 1987): 1. Minimize the number of (1) parts and fixings, (2) design variants, (3) assembly movements, and (4) assembly directions. 2. Provide (1) suitable lead-in chamfers, (2) automatic alignment, (3) easy access for locating surfaces, (4) symmetrical parts, or exaggerate asymmetry, and (5) simple handling and transportation. 3. Avoid (1) visual obstructions, (2) simultaneous fitting operations, (3) parts which will tangle or `nest', (4) adjustments which affect prior adjustments, and (5) the possibility of assembly errors.", "label": 1}
{"text": "Ishii, Lee and Eubanks (1995) proposed the concept of clumping for disassembly and recycle. A clump is a collection of components and/or subassemblies that share a common characteristic based on user intent. Material compatibility is a major issue in clumping for product retirement. The designer may need to clump components that are not compatible due to certain constraints. If the post-life intent of the product is to be recycled and if materials in the clump are not compatible, then the mechanical connections among the components should be easily broken, i.e. using snap fits, press-fits, screws, and screw insert. If the intent of the designer is to clump for disposal, neither the material nor the fastening method is important.", "label": 1}
{"text": "Design for maintainability: Mount units to chassis or structure rather than on otherunits.", "label": 1}
{"text": "Design for maintainability: All adjustments shall be designed to be common in their replacement response (i.e., clockwise,right, or up to increase).", "label": 1}
{"text": "Design for maintainability: Route cables to facilitate tracing, removal, and replacement.", "label": 1}
